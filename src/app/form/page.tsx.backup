'use client'
import { useState } from 'react'

// –ó–∞–≥–∞–ª—å–Ω—ñ —Å—Ç–∏–ª—ñ –¥–ª—è –ø–æ–ª—ñ–≤ –≤–≤–µ–¥–µ–Ω–Ω—è
const inputClassName = "w-full rounded border border-gray-300 bg-white p-3 text-gray-900 focus:border-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 dark:focus:border-blue-400"
const labelClassName = "mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300"
const sectionClassName = "rounded-lg border border-gray-200 p-4 dark:border-gray-700 dark:bg-gray-800/50 sm:p-6"
const headingClassName = "mb-4 text-lg font-semibold sm:text-xl"

export default function ConsultationForm() {
  const [form, setForm] = useState({
    // –ü–∞—Ü—ñ—î–Ω—Ç
    name: '',
    age: '',
    gender: '',
    phone: '',
    height: '', // —Ä—ñ—Å—Ç –≤ —Å–º
    weight: '', // –≤–∞–≥–∞ –≤ –∫–≥

    // –°–∫–∞—Ä–≥–∏
    complaints: '',

    // –û–±—Å—Ç–µ–∂–µ–Ω–Ω—è
    examination_oglyad: false,
    examination_xray: false,
    examination_uzi: false,
    examination_kt: false,
    examination_mrt: false,

    // –ú–µ–¥–∏—á–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è
    has_chronic_diseases: '',
    chronic_diseases: '',
    takes_medications: '',
    medications: '',
    pain_scale: '',

    // –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ
    additional_comments: '',
  })

  const [loading, setLoading] = useState(false)
  const [success, setSuccess] = useState(false)

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –Ü–ú–¢
  const calculateBMI = (height: string, weight: string): number | null => {
    const h = parseFloat(height)
    const w = parseFloat(weight)
    if (h > 0 && w > 0) {
      // –Ü–ú–¢ = –≤–∞–≥–∞(–∫–≥) / —Ä—ñ—Å—Ç(–º)¬≤
      return w / ((h / 100) * (h / 100))
    }
    return null
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü—ñ—ó –Ü–ú–¢
  const getBMICategory = (bmi: number): { text: string; color: string } => {
    if (bmi < 18.5) return { text: '–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—è –≤–∞–≥–∞', color: 'text-blue-600' }
    if (bmi < 25) return { text: '–ù–æ—Ä–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞', color: 'text-green-600' }
    if (bmi < 30) return { text: '–ù–∞–¥–º—ñ—Ä–Ω–∞ –≤–∞–≥–∞', color: 'text-orange-600' }
    return { text: '–û–∂–∏—Ä—ñ–Ω–Ω—è', color: 'text-red-600' }
  }

  const handleChange = (
    e: React.ChangeEvent<
      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement
    >
  ) => {
    const { name, value, type } = e.target

    if (type === 'checkbox') {
      const checked = (e.target as HTMLInputElement).checked
      setForm({ ...form, [name]: checked })
    } else {
      setForm({ ...form, [name]: value })
    }
  }

  const resetForm = () => {
    setForm({
      name: '',
      age: '',
      gender: '',
      phone: '',
      height: '',
      weight: '',
      complaints: '',
      examination_oglyad: false,
      examination_xray: false,
      examination_uzi: false,
      examination_kt: false,
      examination_mrt: false,
      has_chronic_diseases: '',
      chronic_diseases: '',
      takes_medications: '',
      medications: '',
      pain_scale: '',
      additional_comments: '',
    })
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)
    setSuccess(false)

    try {
      const res = await fetch('/api/consultations', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(form),
      })

      if (res.ok) {
        setSuccess(true)
        resetForm()
      } else {
        console.error('Error submitting form')
      }
    } catch (error) {
      console.error('Network error:', error)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="mx-auto max-w-4xl p-4 sm:p-6">
      <h1 className="mb-6 text-center text-2xl font-bold text-gray-900 dark:text-gray-100 sm:mb-8 sm:text-3xl">
        –§–æ—Ä–º–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó
      </h1>

      {success && (
        <div className="mb-6 rounded border border-green-500 bg-green-50 p-4 text-green-700 dark:border-green-400 dark:bg-green-900/30 dark:text-green-300">
          ‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ!
        </div>
      )}

      <form onSubmit={handleSubmit} className="space-y-6 sm:space-y-8">
        {/* üë§ –ü–∞—Ü—ñ—î–Ω—Ç */}
        <section className="rounded-lg border border-gray-200 p-4 dark:border-gray-700 dark:bg-gray-800/50 sm:p-6">
          <h2 className="mb-4 text-lg font-semibold text-blue-600 dark:text-blue-400 sm:text-xl">
            üë§ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–∞—Ü—ñ—î–Ω—Ç–∞
          </h2>

          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2">
            <div>
                            <label className={labelClassName}>
                –Ü–º—è *
              </label>
              <input
                type="text"
                name="name"
                value={form.name}
                onChange={handleChange}
                className={inputClassName}
                required
              />
            </div>

            <div>
              <label className={labelClassName}>
                –í—ñ–∫ *
              </label>
              <input
                type="number"
                name="age"
                min="1"
                max="120"
                value={form.age}
                onChange={handleChange}
                className={inputClassName}
                required
              />
            </div>

            <div>
              <label className={labelClassName}>
                –°—Ç–∞—Ç—å
              </label>
              <select
                name="gender"
                value={form.gender}
                onChange={handleChange}
                className={inputClassName}
              >
                <option value="">–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—å</option>
                <option value="male">–ß–æ–ª–æ–≤—ñ–∫</option>
                <option value="female">–ñ—ñ–Ω–∫–∞</option>
              </select>
            </div>

            <div>
              <label className={labelClassName}>
                –¢–µ–ª–µ—Ñ–æ–Ω
              </label>
              <input
                type="tel"
                name="phone"
                value={form.phone}
                onChange={handleChange}
                placeholder="+380..."
                className={inputClassName}
              />
            </div>

            <div>
              <label className={labelClassName}>
                –†—ñ—Å—Ç (—Å–º)
              </label>
              <input
                type="number"
                name="height"
                value={form.height}
                onChange={handleChange}
                min="50"
                max="250"
                placeholder="170"
                className="w-full rounded border border-gray-300 p-3 focus:border-blue-500 focus:outline-none"
              />
            </div>

            <div>
              <label className="mb-2 block text-sm font-medium text-gray-700">
                –í–∞–≥–∞ (–∫–≥)
              </label>
              <input
                type="number"
                name="weight"
                value={form.weight}
                onChange={handleChange}
                min="20"
                max="300"
                step="0.1"
                placeholder="70"
                className="w-full rounded border border-gray-300 p-3 focus:border-blue-500 focus:outline-none"
              />
            </div>
          </div>

          {/* –Ü–ú–¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä */}
          {form.height && form.weight && (
            <div className="mt-4 rounded-lg bg-blue-50 p-4">
              <h3 className="mb-2 font-medium text-blue-800">
                üìä –Ü–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ (–Ü–ú–¢)
              </h3>
              {(() => {
                const bmi = calculateBMI(form.height, form.weight)
                if (bmi) {
                  const category = getBMICategory(bmi)
                  return (
                    <div className="space-y-1">
                      <p className="text-lg font-semibold text-blue-900">
                        –Ü–ú–¢: {bmi.toFixed(1)} –∫–≥/–º¬≤
                      </p>
                      <p className={`font-medium ${category.color}`}>
                        {category.text}
                      </p>
                      <p className="text-sm text-gray-600">
                        –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫: {form.weight}–∫–≥ √∑ ({form.height}—Å–º √∑ 100)¬≤ ={' '}
                        {bmi.toFixed(1)}
                      </p>
                    </div>
                  )
                }
                return null
              })()}
            </div>
          )}
        </section>

        {/* üìù –°–∫–∞—Ä–≥–∏ */}
        <section className="rounded-lg border border-gray-200 p-6">
          <h2 className="mb-4 text-xl font-semibold text-green-600">
            üìù –°–∫–∞—Ä–≥–∏ –ø–∞—Ü—ñ—î–Ω—Ç–∞
          </h2>

          <div>
            <label className="mb-2 block text-sm font-medium text-gray-700">
              –û–ø–∏—à—ñ—Ç—å —Å–∫–∞—Ä–≥–∏
            </label>
            <textarea
              name="complaints"
              value={form.complaints}
              onChange={handleChange}
              rows={4}
              className="w-full rounded border border-gray-300 p-3 focus:border-green-500 focus:outline-none"
              placeholder="–î–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—à—ñ—Ç—å —Å–∏–º–ø—Ç–æ–º–∏ —Ç–∞ —Å–∫–∞—Ä–≥–∏..."
            />
          </div>
        </section>

        {/* üß™ –û–±—Å—Ç–µ–∂–µ–Ω–Ω—è */}
        <section className="rounded-lg border border-gray-200 p-6">
          <h2 className="mb-4 text-xl font-semibold text-purple-600">
            üß™ –ü—Ä–æ–≤–µ–¥–µ–Ω—ñ –æ–±—Å—Ç–µ–∂–µ–Ω–Ω—è
          </h2>

          <div className="grid grid-cols-2 gap-3 md:grid-cols-3">
            {[
              { name: 'examination_oglyad', label: '–û–≥–ª—è–¥' },
              { name: 'examination_xray', label: '–†–µ–Ω—Ç–≥–µ–Ω' },
              { name: 'examination_uzi', label: '–£–ó–î' },
              { name: 'examination_kt', label: '–ö–¢' },
              { name: 'examination_mrt', label: '–ú–†–¢' },
            ].map((exam) => (
              <label key={exam.name} className="flex items-center space-x-2">
                <input
                  type="checkbox"
                  name={exam.name}
                  checked={form[exam.name as keyof typeof form] as boolean}
                  onChange={handleChange}
                  className="h-4 w-4 rounded border-gray-300 text-purple-600 focus:ring-purple-500"
                />
                <span className="text-sm">{exam.label}</span>
              </label>
            ))}
          </div>
        </section>

        {/* ü©∫ –ú–µ–¥–∏—á–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è */}
        <section className="rounded-lg border border-gray-200 p-6">
          <h2 className="mb-4 text-xl font-semibold text-orange-600">
            ü©∫ –ú–µ–¥–∏—á–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è
          </h2>

          <div className="space-y-4">
            {/* –•—Ä–æ–Ω—ñ—á–Ω—ñ —Ö–≤–æ—Ä–æ–±–∏ */}
            <div>
              <label className="mb-2 block text-sm font-medium text-gray-700">
                –ß–∏ —î —Ö—Ä–æ–Ω—ñ—á–Ω—ñ —Ö–≤–æ—Ä–æ–±–∏?
              </label>
              <div className="flex space-x-4">
                <label className="flex items-center">
                  <input
                    type="radio"
                    name="has_chronic_diseases"
                    value="yes"
                    checked={form.has_chronic_diseases === 'yes'}
                    onChange={handleChange}
                    className="mr-2"
                  />
                  –¢–∞–∫
                </label>
                <label className="flex items-center">
                  <input
                    type="radio"
                    name="has_chronic_diseases"
                    value="no"
                    checked={form.has_chronic_diseases === 'no'}
                    onChange={handleChange}
                    className="mr-2"
                  />
                  –ù—ñ
                </label>
              </div>

              {form.has_chronic_diseases === 'yes' && (
                <input
                  type="text"
                  name="chronic_diseases"
                  value={form.chronic_diseases}
                  onChange={handleChange}
                  placeholder="–ü–µ—Ä–µ—Ä–∞—Ö—É–π—Ç–µ —Ö—Ä–æ–Ω—ñ—á–Ω—ñ —Ö–≤–æ—Ä–æ–±–∏"
                  className="mt-2 w-full rounded border border-gray-300 p-3 focus:border-orange-500 focus:outline-none"
                />
              )}
            </div>

            {/* –õ—ñ–∫–∏ */}
            <div>
              <label className="mb-2 block text-sm font-medium text-gray-700">
                –ß–∏ –ø—Ä–∏–π–º–∞—î –ª—ñ–∫–∏ –ø–æ—Å—Ç—ñ–π–Ω–æ?
              </label>
              <div className="flex space-x-4">
                <label className="flex items-center">
                  <input
                    type="radio"
                    name="takes_medications"
                    value="yes"
                    checked={form.takes_medications === 'yes'}
                    onChange={handleChange}
                    className="mr-2"
                  />
                  –¢–∞–∫
                </label>
                <label className="flex items-center">
                  <input
                    type="radio"
                    name="takes_medications"
                    value="no"
                    checked={form.takes_medications === 'no'}
                    onChange={handleChange}
                    className="mr-2"
                  />
                  –ù—ñ
                </label>
              </div>

              {form.takes_medications === 'yes' && (
                <input
                  type="text"
                  name="medications"
                  value={form.medications}
                  onChange={handleChange}
                  placeholder="–ü–µ—Ä–µ—Ä–∞—Ö—É–π—Ç–µ –ª—ñ–∫–∏ —Ç–∞ –¥–æ–∑—É–≤–∞–Ω–Ω—è"
                  className="mt-2 w-full rounded border border-gray-300 p-3 focus:border-orange-500 focus:outline-none"
                />
              )}
            </div>

            {/* –®–∫–∞–ª–∞ –±–æ–ª—é */}
            <div>
              <label className="mb-2 block text-sm font-medium text-gray-700">
                –†—ñ–≤–µ–Ω—å –±–æ–ª—é (1-10)
              </label>
              <input
                type="range"
                name="pain_scale"
                value={form.pain_scale || 0}
                onChange={handleChange}
                min="0"
                max="10"
                className="w-full"
              />
              <div className="flex justify-between text-sm text-gray-500">
                <span>–ù–µ–º–∞—î –±–æ–ª—é (0)</span>
                <span>–ü–æ—Ç–æ—á–Ω–∏–π: {form.pain_scale || 0}</span>
                <span>–ù–µ—Å—Ç–µ—Ä–ø–Ω–∏–π –±—ñ–ª—å (10)</span>
              </div>
            </div>
          </div>
        </section>

        {/* üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ */}
        <section className="rounded-lg border border-gray-200 p-6">
          <h2 className="mb-4 text-xl font-semibold text-gray-600">
            üí¨ –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ
          </h2>

          <div>
            <label className="mb-2 block text-sm font-medium text-gray-700">
              –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–∞–º—ñ—Ç–∫–∏
            </label>
            <textarea
              name="additional_comments"
              value={form.additional_comments}
              onChange={handleChange}
              rows={3}
              className="w-full rounded border border-gray-300 p-3 focus:border-gray-500 focus:outline-none"
              placeholder="–ë—É–¥—å-—è–∫—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –∞–±–æ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è..."
            />
          </div>
        </section>

        {/* –ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ */}
        <div className="text-center">
          <button
            type="submit"
            disabled={loading}
            className="rounded bg-blue-600 px-8 py-3 font-medium text-white hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:outline-none disabled:opacity-50"
          >
            {loading ? '–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...' : '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é'}
          </button>
        </div>
      </form>
    </div>
  )
}
